/*
 * This file is generated by jOOQ.
 */
package com.example.backend.jooq;


import com.example.backend.jooq.tables.JApiCredentials;
import com.example.backend.jooq.tables.JDailyReports;
import com.example.backend.jooq.tables.JFlywaySchemaHistory;
import com.example.backend.jooq.tables.JGenerationLogs;
import com.example.backend.jooq.tables.JReportTemplates;
import com.example.backend.jooq.tables.JUsers;
import com.example.backend.jooq.tables.records.JApiCredentialsRecord;
import com.example.backend.jooq.tables.records.JDailyReportsRecord;
import com.example.backend.jooq.tables.records.JFlywaySchemaHistoryRecord;
import com.example.backend.jooq.tables.records.JGenerationLogsRecord;
import com.example.backend.jooq.tables.records.JReportTemplatesRecord;
import com.example.backend.jooq.tables.records.JUsersRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<JApiCredentialsRecord> API_CREDENTIALS_PKEY = Internal.createUniqueKey(JApiCredentials.API_CREDENTIALS, DSL.name("api_credentials_pkey"), new TableField[] { JApiCredentials.API_CREDENTIALS.ID }, true);
    public static final UniqueKey<JDailyReportsRecord> DAILY_REPORTS_PKEY = Internal.createUniqueKey(JDailyReports.DAILY_REPORTS, DSL.name("daily_reports_pkey"), new TableField[] { JDailyReports.DAILY_REPORTS.ID }, true);
    public static final UniqueKey<JFlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(JFlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { JFlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<JGenerationLogsRecord> GENERATION_LOGS_PKEY = Internal.createUniqueKey(JGenerationLogs.GENERATION_LOGS, DSL.name("generation_logs_pkey"), new TableField[] { JGenerationLogs.GENERATION_LOGS.ID }, true);
    public static final UniqueKey<JReportTemplatesRecord> REPORT_TEMPLATES_PKEY = Internal.createUniqueKey(JReportTemplates.REPORT_TEMPLATES, DSL.name("report_templates_pkey"), new TableField[] { JReportTemplates.REPORT_TEMPLATES.ID }, true);
    public static final UniqueKey<JUsersRecord> USERS_EMAIL_KEY = Internal.createUniqueKey(JUsers.USERS, DSL.name("users_email_key"), new TableField[] { JUsers.USERS.EMAIL }, true);
    public static final UniqueKey<JUsersRecord> USERS_PKEY = Internal.createUniqueKey(JUsers.USERS, DSL.name("users_pkey"), new TableField[] { JUsers.USERS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<JApiCredentialsRecord, JUsersRecord> API_CREDENTIALS__API_CREDENTIALS_USER_ID_FKEY = Internal.createForeignKey(JApiCredentials.API_CREDENTIALS, DSL.name("api_credentials_user_id_fkey"), new TableField[] { JApiCredentials.API_CREDENTIALS.USER_ID }, Keys.USERS_PKEY, new TableField[] { JUsers.USERS.ID }, true);
    public static final ForeignKey<JDailyReportsRecord, JUsersRecord> DAILY_REPORTS__DAILY_REPORTS_USER_ID_FKEY = Internal.createForeignKey(JDailyReports.DAILY_REPORTS, DSL.name("daily_reports_user_id_fkey"), new TableField[] { JDailyReports.DAILY_REPORTS.USER_ID }, Keys.USERS_PKEY, new TableField[] { JUsers.USERS.ID }, true);
    public static final ForeignKey<JGenerationLogsRecord, JDailyReportsRecord> GENERATION_LOGS__GENERATION_LOGS_REPORT_ID_FKEY = Internal.createForeignKey(JGenerationLogs.GENERATION_LOGS, DSL.name("generation_logs_report_id_fkey"), new TableField[] { JGenerationLogs.GENERATION_LOGS.REPORT_ID }, Keys.DAILY_REPORTS_PKEY, new TableField[] { JDailyReports.DAILY_REPORTS.ID }, true);
    public static final ForeignKey<JReportTemplatesRecord, JUsersRecord> REPORT_TEMPLATES__REPORT_TEMPLATES_USER_ID_FKEY = Internal.createForeignKey(JReportTemplates.REPORT_TEMPLATES, DSL.name("report_templates_user_id_fkey"), new TableField[] { JReportTemplates.REPORT_TEMPLATES.USER_ID }, Keys.USERS_PKEY, new TableField[] { JUsers.USERS.ID }, true);
}

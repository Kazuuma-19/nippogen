/*
 * This file is generated by jOOQ.
 */
package com.example.backend.jooq.tables.records;


import com.example.backend.jooq.tables.NotionCredentials;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotionCredentialsRecord extends UpdatableRecordImpl<NotionCredentialsRecord> implements Record11<UUID, UUID, String, String, String, String, String, JSONB, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.notion_credentials.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.notion_credentials.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.notion_credentials.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.notion_credentials.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.notion_credentials.api_key</code>.
     */
    public void setApiKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.notion_credentials.api_key</code>.
     */
    public String getApiKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.notion_credentials.database_id</code>.
     */
    public void setDatabaseId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.notion_credentials.database_id</code>.
     */
    public String getDatabaseId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.notion_credentials.title_property</code>.
     */
    public void setTitleProperty(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.notion_credentials.title_property</code>.
     */
    public String getTitleProperty() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.notion_credentials.status_property</code>.
     */
    public void setStatusProperty(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.notion_credentials.status_property</code>.
     */
    public String getStatusProperty() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.notion_credentials.date_property</code>.
     */
    public void setDateProperty(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.notion_credentials.date_property</code>.
     */
    public String getDateProperty() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.notion_credentials.filter_conditions</code>.
     */
    public void setFilterConditions(JSONB value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.notion_credentials.filter_conditions</code>.
     */
    public JSONB getFilterConditions() {
        return (JSONB) get(7);
    }

    /**
     * Setter for <code>public.notion_credentials.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.notion_credentials.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.notion_credentials.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.notion_credentials.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.notion_credentials.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.notion_credentials.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<UUID, UUID, String, String, String, String, String, JSONB, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<UUID, UUID, String, String, String, String, String, JSONB, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return NotionCredentials.NOTION_CREDENTIALS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return NotionCredentials.NOTION_CREDENTIALS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return NotionCredentials.NOTION_CREDENTIALS.API_KEY;
    }

    @Override
    public Field<String> field4() {
        return NotionCredentials.NOTION_CREDENTIALS.DATABASE_ID;
    }

    @Override
    public Field<String> field5() {
        return NotionCredentials.NOTION_CREDENTIALS.TITLE_PROPERTY;
    }

    @Override
    public Field<String> field6() {
        return NotionCredentials.NOTION_CREDENTIALS.STATUS_PROPERTY;
    }

    @Override
    public Field<String> field7() {
        return NotionCredentials.NOTION_CREDENTIALS.DATE_PROPERTY;
    }

    @Override
    public Field<JSONB> field8() {
        return NotionCredentials.NOTION_CREDENTIALS.FILTER_CONDITIONS;
    }

    @Override
    public Field<Boolean> field9() {
        return NotionCredentials.NOTION_CREDENTIALS.IS_ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return NotionCredentials.NOTION_CREDENTIALS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return NotionCredentials.NOTION_CREDENTIALS.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getApiKey();
    }

    @Override
    public String component4() {
        return getDatabaseId();
    }

    @Override
    public String component5() {
        return getTitleProperty();
    }

    @Override
    public String component6() {
        return getStatusProperty();
    }

    @Override
    public String component7() {
        return getDateProperty();
    }

    @Override
    public JSONB component8() {
        return getFilterConditions();
    }

    @Override
    public Boolean component9() {
        return getIsActive();
    }

    @Override
    public LocalDateTime component10() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component11() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getApiKey();
    }

    @Override
    public String value4() {
        return getDatabaseId();
    }

    @Override
    public String value5() {
        return getTitleProperty();
    }

    @Override
    public String value6() {
        return getStatusProperty();
    }

    @Override
    public String value7() {
        return getDateProperty();
    }

    @Override
    public JSONB value8() {
        return getFilterConditions();
    }

    @Override
    public Boolean value9() {
        return getIsActive();
    }

    @Override
    public LocalDateTime value10() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value11() {
        return getUpdatedAt();
    }

    @Override
    public NotionCredentialsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value2(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value3(String value) {
        setApiKey(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value4(String value) {
        setDatabaseId(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value5(String value) {
        setTitleProperty(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value6(String value) {
        setStatusProperty(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value7(String value) {
        setDateProperty(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value8(JSONB value) {
        setFilterConditions(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value9(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value10(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord value11(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public NotionCredentialsRecord values(UUID value1, UUID value2, String value3, String value4, String value5, String value6, String value7, JSONB value8, Boolean value9, LocalDateTime value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotionCredentialsRecord
     */
    public NotionCredentialsRecord() {
        super(NotionCredentials.NOTION_CREDENTIALS);
    }

    /**
     * Create a detached, initialised NotionCredentialsRecord
     */
    public NotionCredentialsRecord(UUID id, UUID userId, String apiKey, String databaseId, String titleProperty, String statusProperty, String dateProperty, JSONB filterConditions, Boolean isActive, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(NotionCredentials.NOTION_CREDENTIALS);

        setId(id);
        setUserId(userId);
        setApiKey(apiKey);
        setDatabaseId(databaseId);
        setTitleProperty(titleProperty);
        setStatusProperty(statusProperty);
        setDateProperty(dateProperty);
        setFilterConditions(filterConditions);
        setIsActive(isActive);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}

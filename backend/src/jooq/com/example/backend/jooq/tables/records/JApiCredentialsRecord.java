/*
 * This file is generated by jOOQ.
 */
package com.example.backend.jooq.tables.records;


import com.example.backend.jooq.tables.JApiCredentials;

import java.time.LocalDateTime;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JApiCredentialsRecord extends UpdatableRecordImpl<JApiCredentialsRecord> implements Record8<UUID, UUID, String, String, JSONB, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.api_credentials.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.api_credentials.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.api_credentials.user_id</code>.
     */
    public void setUserId(UUID value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.api_credentials.user_id</code>.
     */
    public UUID getUserId() {
        return (UUID) get(1);
    }

    /**
     * Setter for <code>public.api_credentials.service_type</code>.
     */
    public void setServiceType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.api_credentials.service_type</code>.
     */
    public String getServiceType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.api_credentials.encrypted_key</code>.
     */
    public void setEncryptedKey(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.api_credentials.encrypted_key</code>.
     */
    public String getEncryptedKey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.api_credentials.additional_config</code>.
     */
    public void setAdditionalConfig(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.api_credentials.additional_config</code>.
     */
    public JSONB getAdditionalConfig() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>public.api_credentials.is_active</code>.
     */
    public void setIsActive(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.api_credentials.is_active</code>.
     */
    public Boolean getIsActive() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>public.api_credentials.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.api_credentials.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.api_credentials.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.api_credentials.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UUID, UUID, String, String, JSONB, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UUID, UUID, String, String, JSONB, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return JApiCredentials.API_CREDENTIALS.ID;
    }

    @Override
    public Field<UUID> field2() {
        return JApiCredentials.API_CREDENTIALS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return JApiCredentials.API_CREDENTIALS.SERVICE_TYPE;
    }

    @Override
    public Field<String> field4() {
        return JApiCredentials.API_CREDENTIALS.ENCRYPTED_KEY;
    }

    @Override
    public Field<JSONB> field5() {
        return JApiCredentials.API_CREDENTIALS.ADDITIONAL_CONFIG;
    }

    @Override
    public Field<Boolean> field6() {
        return JApiCredentials.API_CREDENTIALS.IS_ACTIVE;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return JApiCredentials.API_CREDENTIALS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return JApiCredentials.API_CREDENTIALS.UPDATED_AT;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getServiceType();
    }

    @Override
    public String component4() {
        return getEncryptedKey();
    }

    @Override
    public JSONB component5() {
        return getAdditionalConfig();
    }

    @Override
    public Boolean component6() {
        return getIsActive();
    }

    @Override
    public LocalDateTime component7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component8() {
        return getUpdatedAt();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public UUID value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getServiceType();
    }

    @Override
    public String value4() {
        return getEncryptedKey();
    }

    @Override
    public JSONB value5() {
        return getAdditionalConfig();
    }

    @Override
    public Boolean value6() {
        return getIsActive();
    }

    @Override
    public LocalDateTime value7() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value8() {
        return getUpdatedAt();
    }

    @Override
    public JApiCredentialsRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord value2(UUID value) {
        setUserId(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord value3(String value) {
        setServiceType(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord value4(String value) {
        setEncryptedKey(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord value5(JSONB value) {
        setAdditionalConfig(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord value6(Boolean value) {
        setIsActive(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord value7(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord value8(LocalDateTime value) {
        setUpdatedAt(value);
        return this;
    }

    @Override
    public JApiCredentialsRecord values(UUID value1, UUID value2, String value3, String value4, JSONB value5, Boolean value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JApiCredentialsRecord
     */
    public JApiCredentialsRecord() {
        super(JApiCredentials.API_CREDENTIALS);
    }

    /**
     * Create a detached, initialised JApiCredentialsRecord
     */
    public JApiCredentialsRecord(UUID id, UUID userId, String serviceType, String encryptedKey, JSONB additionalConfig, Boolean isActive, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(JApiCredentials.API_CREDENTIALS);

        setId(id);
        setUserId(userId);
        setServiceType(serviceType);
        setEncryptedKey(encryptedKey);
        setAdditionalConfig(additionalConfig);
        setIsActive(isActive);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}

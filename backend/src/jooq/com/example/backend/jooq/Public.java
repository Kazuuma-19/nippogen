/*
 * This file is generated by jOOQ.
 */
package com.example.backend.jooq;


import com.example.backend.jooq.tables.DailyReports;
import com.example.backend.jooq.tables.FlywaySchemaHistory;
import com.example.backend.jooq.tables.GenerationLogs;
import com.example.backend.jooq.tables.GithubCredentials;
import com.example.backend.jooq.tables.NotionCredentials;
import com.example.backend.jooq.tables.ReportTemplates;
import com.example.backend.jooq.tables.TogglCredentials;
import com.example.backend.jooq.tables.Users;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.daily_reports</code>.
     */
    public final DailyReports DAILY_REPORTS = DailyReports.DAILY_REPORTS;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.generation_logs</code>.
     */
    public final GenerationLogs GENERATION_LOGS = GenerationLogs.GENERATION_LOGS;

    /**
     * The table <code>public.github_credentials</code>.
     */
    public final GithubCredentials GITHUB_CREDENTIALS = GithubCredentials.GITHUB_CREDENTIALS;

    /**
     * The table <code>public.notion_credentials</code>.
     */
    public final NotionCredentials NOTION_CREDENTIALS = NotionCredentials.NOTION_CREDENTIALS;

    /**
     * The table <code>public.report_templates</code>.
     */
    public final ReportTemplates REPORT_TEMPLATES = ReportTemplates.REPORT_TEMPLATES;

    /**
     * The table <code>public.toggl_credentials</code>.
     */
    public final TogglCredentials TOGGL_CREDENTIALS = TogglCredentials.TOGGL_CREDENTIALS;

    /**
     * The table <code>public.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            DailyReports.DAILY_REPORTS,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            GenerationLogs.GENERATION_LOGS,
            GithubCredentials.GITHUB_CREDENTIALS,
            NotionCredentials.NOTION_CREDENTIALS,
            ReportTemplates.REPORT_TEMPLATES,
            TogglCredentials.TOGGL_CREDENTIALS,
            Users.USERS
        );
    }
}
